module.exports = app => {
	  const auth = require('../../middleWares/auth')
	  // const { readAllCanMessagesAtInterval } = require('../../routes/getData/bcu')
	  const canIdsSecond = [ // 灰色 85
		      0x1C001010, 0x1C2F0010, 0x1C2F1010, 0x1C2F3010, 0x1C400010, 0x1C401010, 0x1C402010, 0x1C403010, 0x1C404010, 0x1C405010,
		      0x1C001010, 0x1C2F0010, 0x1C2F1010, 0x1C2F3010, 0x1C400010, 0x1C401010, 0x1C402010, 0x1C403010, 0x1C404010, 0x1C405010
		    ];
	  const canIds = [ // 绿色 158
		      0x1C000010, 0x1C001010, 0x1C002010, 0x1C003010,
		      0x1C010010, 0x1C011010, 0x1C012010, 0x1C013010, 0x1C014010, 0x1C015010, 0x1C016010, 0x1C017010, 0x1C018010, 0x1C019010, 0x1C01A010, 0x1C01B010, 0x1C01C010, 0x1C01D010, 0x1C01E010,
		      0x1C036010, 0x1C037010, 0x1C038010, 0x1C039010, 0x1C03A010, 0x1C03B010, 0x1C03C010, 0x1C03D010, 0x1C03E010, 0x1C03F010, 0x1C040010, 0x1C041010, 0x1C042010, 0x1C043010, 0x1C044010,
		      0x1C05C010, 0x1C08A010, 0x1C100010, 0x1C101010, 0x1C102010, 0x1C103010, 0x1C104010, 0x1C105010, 0x1C106010, 0x1C107010, 0x1C108010, 0x1C109010, 0x1C10A010, 0x1C10B010, 0x1C10C010, 0x1C10D010, 0x1C10E010, 0x1C10F010, 0x1C110010, 0x1C111010, 0x1C112010, 0x1C113010, 0x1C114010, 0x1C115010,
		      0x1C116010, 0x1C117010, 0x1C118010, 0x1C119010, 0x1C11A010, 0x1C11B010, 0x1C11C010, 0x1C11D010, 0x1C11E010, 0x1C11F010, 0x1C120010, 0x1C121010, 0x1C122010, 0x1C123010, 0x1C124010, 0x1C125010, 0x1C126010, 0x1C127010, 0x1C128010, 0x1C129010, 0x1C12A010, 0x1C12B010,
		      0x1C12C010, 0x1C12D010, 0x1C12E010, 0x1C12F010, 0x1C130010, 0x1C131010, 0x1C132010, 0x1C133010, 0x1C134010, 0x1C135010, 0x1C136010, 0x1C137010, 0x1C138010, 0x1C139010, 0x1C13A010, 0x1C13B010, 0x1C200010, 0x1C201010, 0x1C202010, 0x1C203010, 0x1C204010, 0x1C205010,
		      0x1C206010, 0x1C207010, 0x1C208010, 0x1C209010, 0x1C20A010, 0x1C20B010, 0x1C20C010, 0x1C20D010, 0x1C20E010, 0x1C20F010, 0x1C210010, 0x1C211010, 0x1C212010, 0x1C213010, 0x1C214010, 0x1C215010,
		      0x1C216010, 0x1C217010, 0x1C218010, 0x1C219010, 0x1C21A010, 0x1C21B010, 0x1C21C010, 0x1C21D010, 0x1C21E010, 0x1C21F010, 0x1C220010, 0x1C221010, 0x1C222010, 0x1C223010, 0x1C224010, 0x1C225010, 0x1C226010, 0x1C227010, 0x1C228010, 0x1C229010, 0x1C22A010, 0x1C22B010,
		      0x1C22C010, 0x1C22D010, 0x1C22E010, 0x1C22F010, 0x1C230010, 0x1C231010, 0x1C232010, 0x1C233010, 0x1C234010, 0x1C235010, 0x1C236010, 0x1C237010, 0x1C238010, 0x1C239010, 0x1C23A010, 0x1C23B010, 0x1C400010, 0x1C401010
		    ];
	  const writeCanIds = [ // 56 控制命令
		      0x1C800010, 0x1C801010, 0x1C802010, 0x1C803010, 0x1C804010, 0x1C808010, 0x1C809010, 0x1C82C010,
		      0x1C82D010, 0x1C82E010, 0x1C82F010, 0x1C830010, 0x1C837010, 0x1C838010, 0x1C839010, 0x1C856010,
		      0x1C857010, 0x1C858010, 0x1C859010, 0x1C85A010, 0x1C85B010, 0x1C85C010, 0x1C85D010, 0x1C85E010,
		      0x1C85F010, 0x1C860010, 0x1C861010, 0x1C862010, 0x1C863010, 0x1C864010, 0x1C865010, 0x1C866010,
		      0x1C867010, 0x1C868010, 0x1C869010, 0x1C86A010, 0x1C86B010, 0x1C86C010, 0x1C86D010, 0x1C86E010,
		      0x1C86F010, 0x1C870010, 0x1C871010, 0x1C872010, 0x1C873010, 0x1C874010, 0x1C875010, 0x1C876010,
		      0x1C877010, 0x1C878010, 0x1C879010, 0x1C87A010, 0x1C87B010, 0x1C87C010, 0x1C87D010, 0x1C8E4010
		    ];
	  /**
	   *    * @description 查询信息
	   *       * */
	  app.get('/monitor/getBMSData', auth('*:*:*'), async (req, res) => {
			console.log('getBMSData');
		      try {
							// const bcu1 = await readAllCanMessagesAtInterval(canIdsSecond)
							// const bcu2 = await readAllCanMessagesAtInterval(canIdsSecond)
							// const bcu3 = await readAllCanMessagesAtInterval(canIdsSecond)
							// console.log(bcu1, bcu2, bcu3);
							// let resultArr = bcu1.concat(bcu2).concat(bcu3)
							let resultArr = [
								'0102000000010000', '0010000000100010',
								'0000001000000000', '0100100000000010', '0002bc0400f00000', '0000d823d8230000',
								'0000000000000000', 'ff69000000000000', '0000000000000000', '0000000000000000',
								'0000000000000c80', '00000c8000000c80', '0000000000e20000', '000002a3000002a3',
								'000002a3000001c1', '000001c1e4cf01c1', 'fcca0000c9d05961', '09f603e832d009bf',
								'fcca00003ddb0395', '0000000000000000', '6200f03f7810f57a', '1f00000002df0000',
								'cc070000002176b4', 'ccccccccf4d00000', '01ca000010d12d6b', '000700d0ff000000',
								'04fcff3f8a4f2a94', '1c000000000000a8', '0000000800000000', '000000308b8db000',
								'0c800feb10331032', '0ffd0fbe1000100d', '0fe6102a102f100a', '104b105a104a104b',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'029f02a0029f02a0', '029f02a0029f02a2', '02a202a302a002a2', 'f748f748f748f748',
								'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748',
								'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748',
								'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748',
								'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748',
								'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748',
								'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748',
								'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748',
								'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748',
								'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748',
								'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748', 'f748f748f748f748',
								'f748f748f748f748', '0000000000000000', '0000000000000000', '0000000000000000',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'0000000000000000', '0000000000000000', '0000000000000000', '0000000000000000',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064',
								'0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0000000000000000','0000000000000000','0000000000000000',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064',
								'0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0000000000000000','0000000000000000','0000000000000000',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064',
								'0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0000000000000000','0000000000000000','0000000000000000',
								'0064006400640064', '0064006400640064',
								'0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0000000000000000','0000000000000000','0000000000000000',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064',
								'0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0000000000000000','0000000000000000','0000000000000000',
								'0064006400640064', '0064006400640064',
								'0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0000000000000000','0000000000000000','0000000000000000',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064',
								'0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0000000000000000','0000000000000000','0000000000000000',
								'0064006400640064', '0064006400640064',
								'0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0000000000000000','0000000000000000','0000000000000000',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064', '0064006400640064', '0064006400640064',
								'0064006400640064', '0064006400640064',
								'0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0064006400640064','0000000000000000','0000000000000000','0000000000000000',
							]
							res.send({
								code: 200,
								message: '操作成功',
								data: resultArr
							})
						} catch (e) {
						res.send({
							code: 201,
								message: e.message
						})
					}
		    })
	  /**
	   *    * @description 查询信息
	   *       * */
	  app.get('/monitor/getNavBMSData', auth('*:*:*'), async (req, res) => {
			console.log('getBMSData');
		      try {
							// const resultArr = await readAllCanMessagesAtInterval([0x1C400010])
							let resultArr = [
								'04002000000000000'
							]
							res.send({
								code: 200,
								message: '操作成功',
								data: resultArr
							})
						} catch (e) {
						res.send({
							code: 201,
								message: e.message
						})
					}
		    })

	  /**
	   *    * @description 控制开关
	   *       * */
	  app.post('/monitor/controlDeviceStatus', auth('*:*:*'), async (req, res) => {
			console.log('getBMSData');
		      try {
						console.log(req.body);
							res.send({
								code: 200,
								message: '操作成功',
							})
						} catch (e) {
						res.send({
							code: 201,
								message: e.message
						})
					}
		    })
}
